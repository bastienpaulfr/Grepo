plugins {
    id "groovy"
    id "maven-publish"
    id "jacoco"
    id 'com.github.kt3k.coveralls' version '2.6.3'
}

// Groovy and publishing plugins
apply plugin: "com.jfrog.artifactory"

// group and version used by maven-publish plugin
group = 'fr.coppernic.utils'
version = '0.0.1'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile localGroovy()
    compile group: 'commons-cli', name: 'commons-cli', version: '1.2'
    compile group: 'fr.coppernic.utils', name: 'grepo-core', version: '0.1.1'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'


    testCompile 'junit:junit:4.12'
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        // need to exclude groovy here otherwise there is a version conflict
        exclude module: 'groovy-all'
    }
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-test', version: '1.4.1.RELEASE'
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7


// Code coverage
jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled = true
    }
}

task app(type: Jar, dependsOn: ['build']) {
    manifest {
        attributes 'Implementation-Version': version,
                'Main-Class': 'fr.coppernic.utils.GrepoTool'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    group = 'build'
    description = 'build full app package'
}

tasks.jacocoTestReport {
    dependsOn 'check'
}
tasks.build {
    dependsOn 'jacocoTestReport'
}
tasks.classes {
    dependsOn':grepo-core:publish'
}

// Configuration of a maven publish
publishing {
    publications {
        // name(MavenPublication)
        maven(MavenPublication) {
            from components.java
        }
    }
}

// To publis to a remote location
publishing {
    repositories {
        maven {
            url "../repo"
        }
    }
}

if (project.properties.containsKey("artifactory_user")
        && project.properties.containsKey("artifactory_password")) {
// Configuration of artifactory publish
    artifactory {
        contextUrl = "${artifactory_contextUrl}"
        //The base Artifactory URL if not overridden by the publisher/resolver
        publish {
            repository {
                repoKey = 'libs-release-local'
                username = "${artifactory_user}"
                password = "${artifactory_password}"
                maven = true
            }
            defaults {
                publications('maven')
                publishArtifacts = true
                publishPom = true
            }
        }
    }

// Task dependency
    artifactoryPublish.dependsOn(['build'])
}


task display << {
    configurations.each { configuration ->
        println ""
        println configuration

        println "artifacts:"
        configuration.allArtifacts.each {
            println it
        }
        println "dependencies:"
        configuration.allDependencies.each {
            println it
        }

        //println configuration.collect()
    }
}